{"code":"export {};\n//# sourceMappingURL=useQuery.types.js.map","references":["/home/mrbadri/code/startup/mui-builder/packages/core/src/types/api.types.ts"],"map":"{\"version\":3,\"file\":\"useQuery.types.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../packages/core/src/utils/useQuery/useQuery.types.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"undefined/placeholder/src/utils/useQuery/useQuery.types.d.ts","writeByteOrderMark":false,"text":"import { ApiError } from '@mui-builder/types/api.types';\nexport type QueryFunction<Data> = () => Promise<Data>;\nexport interface UseQueryResult<Data> {\n    data: Data | null;\n    isLoading: boolean;\n    isError: boolean;\n    error: ApiError | null;\n    refetch: () => void;\n}\nexport interface UseQueryProps<Data> {\n    queryFn: QueryFunction<Data>;\n    enable?: boolean;\n    onSuccess?: (data: Data) => void;\n    onError?: (error: ApiError) => void;\n}\n"}}
