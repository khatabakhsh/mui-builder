{"code":"import { __rest } from \"tslib\";\nimport { useController, useWatch } from 'react-hook-form';\nimport useQueryBuilder from '@mui-builder/utils/useQueryBuilder/useQueryBuilder';\nimport UseScript from '@mui-builder/utils/useScript/useScript';\nimport axios from 'axios';\nimport useForms from '../../../hooks/useForms/useForms';\nimport usePropsController from '../../../hooks/usePropsController/usePropsController';\nimport useRule from '../../../hooks/useRule/useRule';\nconst useCheckbox = (props) => {\n    const { id, api, rule, script, formId, show = true, dependesies, checkboxProps } = props, formControlLabelProps = __rest(props, [\"id\", \"api\", \"rule\", \"script\", \"formId\", \"show\", \"dependesies\", \"checkboxProps\"]);\n    const { configs, queries } = api || {};\n    const { forms } = useForms();\n    const formMethod = forms === null || forms === void 0 ? void 0 : forms[formId];\n    const { setProps, propsController } = usePropsController();\n    const newProps = (propsController === null || propsController === void 0 ? void 0 : propsController[id]) || {};\n    // Handle Script\n    const { scriptResult } = UseScript({\n        script,\n        formMethod,\n        forms,\n        formId,\n        setProps,\n    });\n    // Handle Wtach Fields\n    useWatch({\n        control: formMethod.control,\n        name: dependesies !== null && dependesies !== void 0 ? dependesies : [],\n    });\n    // API Call\n    useQueryBuilder({\n        apiInstance: axios,\n        apiConfigs: configs !== null && configs !== void 0 ? configs : {},\n        apiQuery: queries !== null && queries !== void 0 ? queries : {},\n        formMethod,\n        formId,\n        forms,\n    });\n    // Controller\n    const { field, formState: { errors }, } = useController({\n        name: id,\n        control: formMethod.control,\n        disabled: checkboxProps.disabled,\n        defaultValue: !!checkboxProps.checked,\n        rules: useRule(rule),\n    });\n    const error = errors === null || errors === void 0 ? void 0 : errors[id];\n    // Props\n    const getFormControlLabelProps = () => (Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, field), { error: error }), scriptResult), newProps), formControlLabelProps));\n    const getCheckboxProps = () => (Object.assign({}, checkboxProps));\n    return { show, getCheckboxProps, getFormControlLabelProps };\n};\nexport default useCheckbox;\n//# sourceMappingURL=useCheckbox.js.map","references":["/home/mrbadri/code/startup/mui-builder/node_modules/react-hook-form/dist/index.d.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/utils/useQueryBuilder/useQueryBuilder.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/utils/useScript/useScript.ts","/home/mrbadri/code/startup/mui-builder/node_modules/axios/index.d.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/modules/form/src/components/fields/checkbox/checkbox.types.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/modules/form/src/hooks/useForms/useForms.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/modules/form/src/hooks/usePropsController/usePropsController.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/modules/form/src/hooks/useRule/useRule.ts"],"map":"{\"version\":3,\"file\":\"useCheckbox.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../packages/core/src/modules/form/src/components/fields/checkbox/useCheckbox.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAE1D,OAAO,eAAe,MAAM,oDAAoD,CAAC;AACjF,OAAO,SAAS,MAAM,wCAAwC,CAAC;AAE/D,OAAO,KAAK,MAAM,OAAO,CAAC;AAI1B,OAAO,QAAQ,MAAM,kCAAkC,CAAC;AACxD,OAAO,kBAAkB,MAAM,sDAAsD,CAAC;AACtF,OAAO,OAAO,MAAM,gCAAgC,CAAC;AAErD,MAAM,WAAW,GAAG,CAAC,KAAoB,EAAE,EAAE;IAC3C,MAAM,EACJ,EAAE,EACF,GAAG,EACH,IAAI,EACJ,MAAM,EACN,MAAM,EACN,IAAI,GAAG,IAAI,EACX,WAAW,EACX,aAAa,KAEX,KAAK,EADJ,qBAAqB,UACtB,KAAK,EAVH,iFAUL,CAAQ,CAAC;IAEV,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC;IAEvC,MAAM,EAAE,KAAK,EAAE,GAAG,QAAQ,EAAE,CAAC;IAC7B,MAAM,UAAU,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,MAAM,CAAC,CAAC;IACnC,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG,kBAAkB,EAAE,CAAC;IAE3D,MAAM,QAAQ,GAAG,CAAA,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAG,EAAE,CAAC,KAAI,EAAE,CAAC;IAE7C,gBAAgB;IAChB,MAAM,EAAE,YAAY,EAAE,GAAG,SAAS,CAAC;QACjC,MAAM;QACN,UAAU;QACV,KAAK;QACL,MAAM;QACN,QAAQ;KACT,CAAC,CAAC;IAEH,sBAAsB;IACtB,QAAQ,CAAC;QACP,OAAO,EAAE,UAAU,CAAC,OAAO;QAC3B,IAAI,EAAE,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,EAAE;KACxB,CAAC,CAAC;IAEH,WAAW;IACX,eAAe,CAAC;QACd,WAAW,EAAE,KAAK;QAClB,UAAU,EAAE,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE;QACzB,QAAQ,EAAE,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE;QACvB,UAAU;QACV,MAAM;QACN,KAAK;KACN,CAAC,CAAC;IAEH,aAAa;IACb,MAAM,EACJ,KAAK,EACL,SAAS,EAAE,EAAE,MAAM,EAAE,GACtB,GAAG,aAAa,CAAC;QAChB,IAAI,EAAE,EAAE;QACR,OAAO,EAAE,UAAU,CAAC,OAAO;QAC3B,QAAQ,EAAE,aAAa,CAAC,QAAQ;QAChC,YAAY,EAAE,CAAC,CAAC,aAAa,CAAC,OAAO;QACrC,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC;KACrB,CAAC,CAAC;IAEH,MAAM,KAAK,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAG,EAAE,CAAC,CAAC;IAE3B,QAAQ;IACR,MAAM,wBAAwB,GAAG,GAAG,EAAE,CAAC,2EAClC,KAAK,KACR,KAAK,EAAE,KAAK,KACT,YAAY,GACZ,QAAQ,GACR,qBAAqB,EACxB,CAAC;IAEH,MAAM,gBAAgB,GAAG,GAAG,EAAE,CAAC,mBAC1B,aAAa,EAChB,CAAC;IAEH,OAAO,EAAE,IAAI,EAAE,gBAAgB,EAAE,wBAAwB,EAAE,CAAC;AAC9D,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC\"}","dts":{"name":"undefined/placeholder/src/modules/form/src/components/fields/checkbox/useCheckbox.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\n/// <reference types=\"react\" />\nimport { CheckboxProps } from './checkbox.types';\ndeclare const useCheckbox: (props: CheckboxProps) => {\n    show: boolean;\n    getCheckboxProps: () => {\n        checked?: boolean | undefined;\n        checkedIcon?: import(\"react\").ReactNode;\n        classes?: Partial<import(\"@mui/material\").CheckboxClasses> | undefined;\n        color?: import(\"@mui/types\").OverridableStringUnion<\"error\" | \"primary\" | \"secondary\" | \"info\" | \"success\" | \"warning\" | \"default\", import(\"@mui/material\").CheckboxPropsColorOverrides> | undefined;\n        disabled?: boolean | undefined;\n        disableRipple?: boolean | undefined;\n        icon?: import(\"react\").ReactNode;\n        id?: string | undefined;\n        indeterminate?: boolean | undefined;\n        indeterminateIcon?: import(\"react\").ReactNode;\n        inputProps?: import(\"react\").InputHTMLAttributes<HTMLInputElement> | undefined;\n        inputRef?: import(\"react\").Ref<HTMLInputElement> | undefined;\n        onChange?: ((event: import(\"react\").ChangeEvent<HTMLInputElement>, checked: boolean) => void) | undefined;\n        required?: boolean | undefined;\n        size?: import(\"@mui/types\").OverridableStringUnion<\"small\" | \"medium\", import(\"@mui/material\").CheckboxPropsSizeOverrides> | undefined;\n        sx?: import(\"@mui/system\").SxProps<import(\"@mui/material\").Theme> | undefined;\n        value?: unknown;\n        form?: string | undefined;\n        defaultChecked?: boolean | undefined;\n        defaultValue?: string | number | readonly string[] | undefined;\n        suppressContentEditableWarning?: boolean | undefined;\n        suppressHydrationWarning?: boolean | undefined;\n        accessKey?: string | undefined;\n        autoFocus?: boolean | undefined;\n        className?: string | undefined;\n        contentEditable?: (boolean | \"true\" | \"false\") | \"inherit\" | undefined;\n        contextMenu?: string | undefined;\n        dir?: string | undefined;\n        draggable?: (boolean | \"true\" | \"false\") | undefined;\n        hidden?: boolean | undefined;\n        lang?: string | undefined;\n        nonce?: string | undefined;\n        placeholder?: string | undefined;\n        slot?: string | undefined;\n        spellCheck?: (boolean | \"true\" | \"false\") | undefined;\n        style?: import(\"react\").CSSProperties | undefined;\n        tabIndex?: number | undefined;\n        title?: string | undefined;\n        translate?: \"yes\" | \"no\" | undefined;\n        radioGroup?: string | undefined;\n        role?: import(\"react\").AriaRole | undefined;\n        about?: string | undefined;\n        content?: string | undefined;\n        datatype?: string | undefined;\n        inlist?: any;\n        prefix?: string | undefined;\n        property?: string | undefined;\n        rel?: string | undefined;\n        resource?: string | undefined;\n        rev?: string | undefined;\n        typeof?: string | undefined;\n        vocab?: string | undefined;\n        autoCapitalize?: string | undefined;\n        autoCorrect?: string | undefined;\n        autoSave?: string | undefined;\n        itemProp?: string | undefined;\n        itemScope?: boolean | undefined;\n        itemType?: string | undefined;\n        itemID?: string | undefined;\n        itemRef?: string | undefined;\n        results?: number | undefined;\n        security?: string | undefined;\n        unselectable?: \"on\" | \"off\" | undefined;\n        inputMode?: \"url\" | \"search\" | \"text\" | \"none\" | \"tel\" | \"email\" | \"numeric\" | \"decimal\" | undefined;\n        is?: string | undefined;\n        \"aria-activedescendant\"?: string | undefined;\n        \"aria-atomic\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-autocomplete\"?: \"list\" | \"none\" | \"inline\" | \"both\" | undefined;\n        \"aria-braillelabel\"?: string | undefined;\n        \"aria-brailleroledescription\"?: string | undefined;\n        \"aria-busy\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-checked\"?: boolean | \"true\" | \"false\" | \"mixed\" | undefined;\n        \"aria-colcount\"?: number | undefined;\n        \"aria-colindex\"?: number | undefined;\n        \"aria-colindextext\"?: string | undefined;\n        \"aria-colspan\"?: number | undefined;\n        \"aria-controls\"?: string | undefined;\n        \"aria-current\"?: boolean | \"time\" | \"page\" | \"true\" | \"false\" | \"step\" | \"location\" | \"date\" | undefined;\n        \"aria-describedby\"?: string | undefined;\n        \"aria-description\"?: string | undefined;\n        \"aria-details\"?: string | undefined;\n        \"aria-disabled\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-dropeffect\"?: \"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined;\n        \"aria-errormessage\"?: string | undefined;\n        \"aria-expanded\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-flowto\"?: string | undefined;\n        \"aria-grabbed\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-haspopup\"?: boolean | \"dialog\" | \"menu\" | \"grid\" | \"true\" | \"false\" | \"listbox\" | \"tree\" | undefined;\n        \"aria-hidden\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-invalid\"?: boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined;\n        \"aria-keyshortcuts\"?: string | undefined;\n        \"aria-label\"?: string | undefined;\n        \"aria-labelledby\"?: string | undefined;\n        \"aria-level\"?: number | undefined;\n        \"aria-live\"?: \"off\" | \"assertive\" | \"polite\" | undefined;\n        \"aria-modal\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-multiline\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-multiselectable\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-orientation\"?: \"horizontal\" | \"vertical\" | undefined;\n        \"aria-owns\"?: string | undefined;\n        \"aria-placeholder\"?: string | undefined;\n        \"aria-posinset\"?: number | undefined;\n        \"aria-pressed\"?: boolean | \"true\" | \"false\" | \"mixed\" | undefined;\n        \"aria-readonly\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-relevant\"?: \"text\" | \"all\" | \"additions\" | \"additions removals\" | \"additions text\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined;\n        \"aria-required\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-roledescription\"?: string | undefined;\n        \"aria-rowcount\"?: number | undefined;\n        \"aria-rowindex\"?: number | undefined;\n        \"aria-rowindextext\"?: string | undefined;\n        \"aria-rowspan\"?: number | undefined;\n        \"aria-selected\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-setsize\"?: number | undefined;\n        \"aria-sort\"?: \"none\" | \"ascending\" | \"descending\" | \"other\" | undefined;\n        \"aria-valuemax\"?: number | undefined;\n        \"aria-valuemin\"?: number | undefined;\n        \"aria-valuenow\"?: number | undefined;\n        \"aria-valuetext\"?: string | undefined;\n        dangerouslySetInnerHTML?: {\n            __html: string | TrustedHTML;\n        } | undefined;\n        onCopy?: import(\"react\").ClipboardEventHandler<HTMLButtonElement> | undefined;\n        onCopyCapture?: import(\"react\").ClipboardEventHandler<HTMLButtonElement> | undefined;\n        onCut?: import(\"react\").ClipboardEventHandler<HTMLButtonElement> | undefined;\n        onCutCapture?: import(\"react\").ClipboardEventHandler<HTMLButtonElement> | undefined;\n        onPaste?: import(\"react\").ClipboardEventHandler<HTMLButtonElement> | undefined;\n        onPasteCapture?: import(\"react\").ClipboardEventHandler<HTMLButtonElement> | undefined;\n        onCompositionEnd?: import(\"react\").CompositionEventHandler<HTMLButtonElement> | undefined;\n        onCompositionEndCapture?: import(\"react\").CompositionEventHandler<HTMLButtonElement> | undefined;\n        onCompositionStart?: import(\"react\").CompositionEventHandler<HTMLButtonElement> | undefined;\n        onCompositionStartCapture?: import(\"react\").CompositionEventHandler<HTMLButtonElement> | undefined;\n        onCompositionUpdate?: import(\"react\").CompositionEventHandler<HTMLButtonElement> | undefined;\n        onCompositionUpdateCapture?: import(\"react\").CompositionEventHandler<HTMLButtonElement> | undefined;\n        onFocus?: import(\"react\").FocusEventHandler<HTMLButtonElement> | undefined;\n        onFocusCapture?: import(\"react\").FocusEventHandler<HTMLButtonElement> | undefined;\n        onBlur?: import(\"react\").FocusEventHandler<HTMLButtonElement> | undefined;\n        onBlurCapture?: import(\"react\").FocusEventHandler<HTMLButtonElement> | undefined;\n        onChangeCapture?: import(\"react\").FormEventHandler<HTMLButtonElement> | undefined;\n        onBeforeInput?: import(\"react\").FormEventHandler<HTMLButtonElement> | undefined;\n        onBeforeInputCapture?: import(\"react\").FormEventHandler<HTMLButtonElement> | undefined;\n        onInput?: import(\"react\").FormEventHandler<HTMLButtonElement> | undefined;\n        onInputCapture?: import(\"react\").FormEventHandler<HTMLButtonElement> | undefined;\n        onReset?: import(\"react\").FormEventHandler<HTMLButtonElement> | undefined;\n        onResetCapture?: import(\"react\").FormEventHandler<HTMLButtonElement> | undefined;\n        onSubmit?: import(\"react\").FormEventHandler<HTMLButtonElement> | undefined;\n        onSubmitCapture?: import(\"react\").FormEventHandler<HTMLButtonElement> | undefined;\n        onInvalid?: import(\"react\").FormEventHandler<HTMLButtonElement> | undefined;\n        onInvalidCapture?: import(\"react\").FormEventHandler<HTMLButtonElement> | undefined;\n        onLoad?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onLoadCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onError?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onErrorCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onKeyDown?: import(\"react\").KeyboardEventHandler<HTMLButtonElement> | undefined;\n        onKeyDownCapture?: import(\"react\").KeyboardEventHandler<HTMLButtonElement> | undefined;\n        onKeyPress?: import(\"react\").KeyboardEventHandler<HTMLButtonElement> | undefined;\n        onKeyPressCapture?: import(\"react\").KeyboardEventHandler<HTMLButtonElement> | undefined;\n        onKeyUp?: import(\"react\").KeyboardEventHandler<HTMLButtonElement> | undefined;\n        onKeyUpCapture?: import(\"react\").KeyboardEventHandler<HTMLButtonElement> | undefined;\n        onAbort?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onAbortCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onCanPlay?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onCanPlayCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onCanPlayThrough?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onCanPlayThroughCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onDurationChange?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onDurationChangeCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onEmptied?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onEmptiedCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onEncrypted?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onEncryptedCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onEnded?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onEndedCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onLoadedData?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onLoadedDataCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onLoadedMetadata?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onLoadedMetadataCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onLoadStart?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onLoadStartCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onPause?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onPauseCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onPlay?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onPlayCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onPlaying?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onPlayingCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onProgress?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onProgressCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onRateChange?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onRateChangeCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onResize?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onResizeCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onSeeked?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onSeekedCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onSeeking?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onSeekingCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onStalled?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onStalledCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onSuspend?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onSuspendCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onTimeUpdate?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onTimeUpdateCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onVolumeChange?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onVolumeChangeCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onWaiting?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onWaitingCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onAuxClick?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onAuxClickCapture?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onClick?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onClickCapture?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onContextMenu?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onContextMenuCapture?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onDoubleClick?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onDoubleClickCapture?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onDrag?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDragCapture?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDragEnd?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDragEndCapture?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDragEnter?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDragEnterCapture?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDragExit?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDragExitCapture?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDragLeave?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDragLeaveCapture?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDragOver?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDragOverCapture?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDragStart?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDragStartCapture?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDrop?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onDropCapture?: import(\"react\").DragEventHandler<HTMLButtonElement> | undefined;\n        onMouseDown?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onMouseDownCapture?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onMouseEnter?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onMouseLeave?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onMouseMove?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onMouseMoveCapture?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onMouseOut?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onMouseOutCapture?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onMouseOver?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onMouseOverCapture?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onMouseUp?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onMouseUpCapture?: import(\"react\").MouseEventHandler<HTMLButtonElement> | undefined;\n        onSelect?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onSelectCapture?: import(\"react\").ReactEventHandler<HTMLButtonElement> | undefined;\n        onTouchCancel?: import(\"react\").TouchEventHandler<HTMLButtonElement> | undefined;\n        onTouchCancelCapture?: import(\"react\").TouchEventHandler<HTMLButtonElement> | undefined;\n        onTouchEnd?: import(\"react\").TouchEventHandler<HTMLButtonElement> | undefined;\n        onTouchEndCapture?: import(\"react\").TouchEventHandler<HTMLButtonElement> | undefined;\n        onTouchMove?: import(\"react\").TouchEventHandler<HTMLButtonElement> | undefined;\n        onTouchMoveCapture?: import(\"react\").TouchEventHandler<HTMLButtonElement> | undefined;\n        onTouchStart?: import(\"react\").TouchEventHandler<HTMLButtonElement> | undefined;\n        onTouchStartCapture?: import(\"react\").TouchEventHandler<HTMLButtonElement> | undefined;\n        onPointerDown?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerDownCapture?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerMove?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerMoveCapture?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerUp?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerUpCapture?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerCancel?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerCancelCapture?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerEnter?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerEnterCapture?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerLeave?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerLeaveCapture?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerOver?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerOverCapture?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerOut?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onPointerOutCapture?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onGotPointerCapture?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onGotPointerCaptureCapture?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onLostPointerCapture?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onLostPointerCaptureCapture?: import(\"react\").PointerEventHandler<HTMLButtonElement> | undefined;\n        onScroll?: import(\"react\").UIEventHandler<HTMLButtonElement> | undefined;\n        onScrollCapture?: import(\"react\").UIEventHandler<HTMLButtonElement> | undefined;\n        onWheel?: import(\"react\").WheelEventHandler<HTMLButtonElement> | undefined;\n        onWheelCapture?: import(\"react\").WheelEventHandler<HTMLButtonElement> | undefined;\n        onAnimationStart?: import(\"react\").AnimationEventHandler<HTMLButtonElement> | undefined;\n        onAnimationStartCapture?: import(\"react\").AnimationEventHandler<HTMLButtonElement> | undefined;\n        onAnimationEnd?: import(\"react\").AnimationEventHandler<HTMLButtonElement> | undefined;\n        onAnimationEndCapture?: import(\"react\").AnimationEventHandler<HTMLButtonElement> | undefined;\n        onAnimationIteration?: import(\"react\").AnimationEventHandler<HTMLButtonElement> | undefined;\n        onAnimationIterationCapture?: import(\"react\").AnimationEventHandler<HTMLButtonElement> | undefined;\n        onTransitionEnd?: import(\"react\").TransitionEventHandler<HTMLButtonElement> | undefined;\n        onTransitionEndCapture?: import(\"react\").TransitionEventHandler<HTMLButtonElement> | undefined;\n        name?: string | undefined;\n        ref?: ((instance: HTMLButtonElement | null) => void) | import(\"react\").RefObject<HTMLButtonElement> | null | undefined;\n        formMethod?: string | undefined;\n        action?: import(\"react\").Ref<import(\"@mui/material\").ButtonBaseActions> | undefined;\n        centerRipple?: boolean | undefined;\n        disableTouchRipple?: boolean | undefined;\n        focusRipple?: boolean | undefined;\n        focusVisibleClassName?: string | undefined;\n        LinkComponent?: import(\"react\").ElementType<any> | undefined;\n        onFocusVisible?: import(\"react\").FocusEventHandler<any> | undefined;\n        TouchRippleProps?: Partial<import(\"@mui/material/ButtonBase/TouchRipple\").TouchRippleProps> | undefined;\n        touchRippleRef?: import(\"react\").Ref<import(\"@mui/material/ButtonBase/TouchRipple\").TouchRippleActions> | undefined;\n        key?: import(\"react\").Key | null | undefined;\n        formAction?: string | undefined;\n        formEncType?: string | undefined;\n        formNoValidate?: boolean | undefined;\n        formTarget?: string | undefined;\n        component?: import(\"react\").ElementType<any> | undefined;\n        disableFocusRipple?: boolean | undefined;\n        edge?: false | \"start\" | \"end\" | undefined;\n        readOnly?: boolean | undefined;\n    };\n    getFormControlLabelProps: () => any;\n};\nexport default useCheckbox;\n"}}
