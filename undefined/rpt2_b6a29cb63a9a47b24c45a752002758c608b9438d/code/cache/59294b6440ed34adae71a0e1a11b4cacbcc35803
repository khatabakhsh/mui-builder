{"code":"import { __awaiter } from \"tslib\";\nimport apiBuilder from '@mui-builder/utils/api/builder/apiBuilder';\nimport convertFn from '@mui-builder/utils/convertFn/convertFn';\nimport isStrFn from '@mui-builder/utils/isStrFn/isStrFn';\nimport useQuery from '@mui-builder/utils/useQuery/useQuery';\nconst useQueryBuilder = ({ formId, forms, formMethod, apiConfigs, apiInstance, apiQuery, }) => {\n    const { enable, onError, onSuccess } = apiQuery;\n    const api = () => __awaiter(void 0, void 0, void 0, function* () {\n        return apiBuilder({\n            formId,\n            forms,\n            formMethod,\n            apiConfigs,\n            apiInstance,\n        });\n    });\n    const enableBuilder = () => {\n        if (isStrFn(enable))\n            return convertFn(enable, 'formMethod', 'forms', 'formId')(formMethod, forms, formId);\n        return enable;\n    };\n    const onErrorBuilder = () => {\n        if (isStrFn(onError))\n            return convertFn(onError, 'formMethod', 'forms', 'formId')(formMethod, forms, formId);\n        return onError;\n    };\n    const onSuccessBuilder = () => {\n        if (isStrFn(onSuccess))\n            return convertFn(onSuccess, 'formMethod', 'forms', 'formId')(formMethod, forms, formId);\n        return onSuccess;\n    };\n    return useQuery({\n        queryFn: api,\n        enable: enableBuilder(),\n        onError: onErrorBuilder(),\n        onSuccess: onSuccessBuilder(),\n    });\n};\nexport default useQueryBuilder;\n//# sourceMappingURL=useQueryBuilder.js.map","references":["/home/mrbadri/code/startup/mui-builder/packages/core/src/types/api.types.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/utils/api/builder/apiBuilder.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/utils/convertFn/convertFn.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/utils/isStrFn/isStrFn.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/utils/useQuery/useQuery.ts","/home/mrbadri/code/startup/mui-builder/node_modules/axios/index.d.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/utils/useQueryBuilder/useQueryBuilder.types.ts"],"map":"{\"version\":3,\"file\":\"useQueryBuilder.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../packages/core/src/utils/useQueryBuilder/useQueryBuilder.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,UAAU,MAAM,2CAA2C,CAAC;AACnE,OAAO,SAAS,MAAM,wCAAwC,CAAC;AAC/D,OAAO,OAAO,MAAM,oCAAoC,CAAC;AACzD,OAAO,QAAQ,MAAM,sCAAsC,CAAC;AAW5D,MAAM,eAAe,GAAG,CAAI,EAC1B,MAAM,EACN,KAAK,EACL,UAAU,EACV,UAAU,EACV,WAAW,EACX,QAAQ,GACwC,EAAE,EAAE;IACpD,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,QAAQ,CAAC;IAEhD,MAAM,GAAG,GAAG,GAAS,EAAE;QACrB,OAAA,UAAU,CAAI;YACZ,MAAM;YACN,KAAK;YACL,UAAU;YACV,UAAU;YACV,WAAW;SACZ,CAAC,CAAA;MAAA,CAAC;IAEL,MAAM,aAAa,GAAG,GAAG,EAAE;QACzB,IAAI,OAAO,CAAC,MAAM,CAAC;YACjB,OAAO,SAAS,CACd,MAAgB,EAChB,YAAY,EACZ,OAAO,EACP,QAAQ,CACT,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAE/B,OAAO,MAAiB,CAAC;IAC3B,CAAC,CAAC;IACF,MAAM,cAAc,GAAG,GAAG,EAAE;QAC1B,IAAI,OAAO,CAAC,OAAO,CAAC;YAClB,OAAO,SAAS,CACd,OAAiB,EACjB,YAAY,EACZ,OAAO,EACP,QAAQ,CACT,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAE/B,OAAO,OAAoC,CAAC;IAC9C,CAAC,CAAC;IACF,MAAM,gBAAgB,GAAG,GAAG,EAAE;QAC5B,IAAI,OAAO,CAAC,SAAS,CAAC;YACpB,OAAO,SAAS,CACd,SAAmB,EACnB,YAAY,EACZ,OAAO,EACP,QAAQ,CACT,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAE/B,OAAO,SAAoC,CAAC;IAC9C,CAAC,CAAC;IAEF,OAAO,QAAQ,CAA4B;QACzC,OAAO,EAAE,GAAG;QACZ,MAAM,EAAE,aAAa,EAAE;QACvB,OAAO,EAAE,cAAc,EAAE;QACzB,SAAS,EAAE,gBAAgB,EAAE;KAC9B,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,eAAe,eAAe,CAAC\"}","dts":{"name":"undefined/placeholder/src/utils/useQueryBuilder/useQueryBuilder.d.ts","writeByteOrderMark":false,"text":"import { AxiosResponse } from 'axios';\nimport { UseQueryBuilderProps } from './useQueryBuilder.types';\ndeclare const useQueryBuilder: <T>({ formId, forms, formMethod, apiConfigs, apiInstance, apiQuery, }: UseQueryBuilderProps<AxiosResponse<T, unknown>>) => import(\"../useQuery/useQuery.types\").UseQueryResult<AxiosResponse<T, unknown>>;\nexport default useQueryBuilder;\n"}}
