{"code":"import { __rest } from \"tslib\";\nimport { useController, useWatch } from 'react-hook-form';\nimport useQueryBuilder from '@mui-builder/utils/useQueryBuilder/useQueryBuilder';\nimport UseScript from '@mui-builder/utils/useScript/useScript';\nimport axios from 'axios';\nimport useForms from '../../../hooks/useForms/useForms';\nimport usePropsController from '../../../hooks/usePropsController/usePropsController';\nimport useRule from '../../../hooks/useRule/useRule';\nconst useAutoComplete = (props) => {\n    const { formId, script, api, show = true, dependesies, defaultValue, options, innerTextFieldProps } = props, restAutoCompleteProps = __rest(props, [\"formId\", \"script\", \"api\", \"show\", \"dependesies\", \"defaultValue\", \"options\", \"innerTextFieldProps\"]);\n    const { configs, queries } = api || {};\n    const { forms } = useForms();\n    const formMethod = forms === null || forms === void 0 ? void 0 : forms[formId];\n    const { setProps, propsController } = usePropsController();\n    const newProps = (propsController === null || propsController === void 0 ? void 0 : propsController[restAutoCompleteProps === null || restAutoCompleteProps === void 0 ? void 0 : restAutoCompleteProps.id]) || {};\n    useQueryBuilder({\n        apiInstance: axios,\n        apiConfigs: configs !== null && configs !== void 0 ? configs : {},\n        apiQuery: queries !== null && queries !== void 0 ? queries : {},\n        formMethod,\n        formId,\n        forms,\n    });\n    // Handle Wtach Fields\n    useWatch({\n        control: formMethod.control,\n        name: dependesies !== null && dependesies !== void 0 ? dependesies : [],\n    });\n    // Controller\n    const { field, formState: { errors }, } = useController({\n        name: restAutoCompleteProps.id,\n        control: formMethod.control,\n        disabled: restAutoCompleteProps.disabled,\n        rules: useRule(restAutoCompleteProps === null || restAutoCompleteProps === void 0 ? void 0 : restAutoCompleteProps.rule),\n        defaultValue,\n    });\n    const error = errors === null || errors === void 0 ? void 0 : errors[restAutoCompleteProps.id];\n    // Handle Script\n    const { scriptResult } = UseScript({\n        script,\n        formMethod,\n        forms,\n        formId,\n        setProps,\n    });\n    // Props Methods\n    // -- Handle Option\n    const getOptionLabel = (option) => { var _a; return (_a = option === null || option === void 0 ? void 0 : option.name) !== null && _a !== void 0 ? _a : ''; };\n    const isOptionEqualToValue = (option, value) => option.id === value.id;\n    const onChange = (_, value) => {\n        field.onChange(value !== null && value !== void 0 ? value : null);\n    };\n    const hanldeHelperText = () => { var _a, _b; return (_b = (_a = error === null || error === void 0 ? void 0 : error.message) !== null && _a !== void 0 ? _a : innerTextFieldProps === null || innerTextFieldProps === void 0 ? void 0 : innerTextFieldProps.helperText) !== null && _b !== void 0 ? _b : null; };\n    // Props\n    const getFieldProps = () => {\n        var _a;\n        return (Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, field), { value: (_a = field.value) !== null && _a !== void 0 ? _a : null, onChange: onChange, isOptionEqualToValue,\n            getOptionLabel, error: error, options }), restAutoCompleteProps), scriptResult), newProps));\n    };\n    const getInnerTextFieldProps = () => (Object.assign(Object.assign({}, innerTextFieldProps), { helperText: hanldeHelperText() }));\n    return { getFieldProps, show, getInnerTextFieldProps };\n};\nexport default useAutoComplete;\n//# sourceMappingURL=useAutoComplete.js.map","references":["/home/mrbadri/code/startup/mui-builder/node_modules/@types/react/index.d.ts","/home/mrbadri/code/startup/mui-builder/node_modules/react-hook-form/dist/index.d.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/utils/useQueryBuilder/useQueryBuilder.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/utils/useScript/useScript.ts","/home/mrbadri/code/startup/mui-builder/node_modules/axios/index.d.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/modules/form/src/components/fields/autoComplete/autoComplete.types.tsx","/home/mrbadri/code/startup/mui-builder/packages/core/src/modules/form/src/hooks/useForms/useForms.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/modules/form/src/hooks/usePropsController/usePropsController.ts","/home/mrbadri/code/startup/mui-builder/packages/core/src/modules/form/src/hooks/useRule/useRule.ts"],"map":"{\"version\":3,\"file\":\"useAutoComplete.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../../../packages/core/src/modules/form/src/components/fields/autoComplete/useAutoComplete.tsx\"],\"names\":[],\"mappings\":\";AACA,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAE1D,OAAO,eAAe,MAAM,oDAAoD,CAAC;AACjF,OAAO,SAAS,MAAM,wCAAwC,CAAC;AAE/D,OAAO,KAAK,MAAM,OAAO,CAAC;AAI1B,OAAO,QAAQ,MAAM,kCAAkC,CAAC;AACxD,OAAO,kBAAkB,MAAM,sDAAsD,CAAC;AACtF,OAAO,OAAO,MAAM,gCAAgC,CAAC;AAErD,MAAM,eAAe,GAAG,CAAC,KAA6C,EAAE,EAAE;IACxE,MAAM,EACJ,MAAM,EACN,MAAM,EACN,GAAG,EACH,IAAI,GAAG,IAAI,EACX,WAAW,EACX,YAAY,EACZ,OAAO,EACP,mBAAmB,KAEjB,KAAK,EADJ,qBAAqB,UACtB,KAAK,EAVH,oGAUL,CAAQ,CAAC;IAEV,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC;IAEvC,MAAM,EAAE,KAAK,EAAE,GAAG,QAAQ,EAAE,CAAC;IAC7B,MAAM,UAAU,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAG,MAAM,CAAC,CAAC;IAEnC,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG,kBAAkB,EAAE,CAAC;IAC3D,MAAM,QAAQ,GAAG,CAAA,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAG,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,EAAE,CAAC,KAAI,EAAE,CAAC;IAEpE,eAAe,CAAC;QACd,WAAW,EAAE,KAAK;QAClB,UAAU,EAAE,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE;QACzB,QAAQ,EAAE,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,EAAE;QACvB,UAAU;QACV,MAAM;QACN,KAAK;KACN,CAAC,CAAC;IAEH,sBAAsB;IACtB,QAAQ,CAAC;QACP,OAAO,EAAE,UAAU,CAAC,OAAO;QAC3B,IAAI,EAAE,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,EAAE;KACxB,CAAC,CAAC;IAEH,aAAa;IACb,MAAM,EACJ,KAAK,EACL,SAAS,EAAE,EAAE,MAAM,EAAE,GACtB,GAAG,aAAa,CAAC;QAChB,IAAI,EAAE,qBAAqB,CAAC,EAAE;QAC9B,OAAO,EAAE,UAAU,CAAC,OAAO;QAC3B,QAAQ,EAAE,qBAAqB,CAAC,QAAQ;QACxC,KAAK,EAAE,OAAO,CAAC,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,IAAI,CAAC;QAC3C,YAAY;KACb,CAAC,CAAC;IAEH,MAAM,KAAK,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAG,qBAAqB,CAAC,EAAE,CAAC,CAAC;IAEjD,gBAAgB;IAChB,MAAM,EAAE,YAAY,EAAE,GAAG,SAAS,CAAC;QACjC,MAAM;QACN,UAAU;QACV,KAAK;QACL,MAAM;QACN,QAAQ;KACT,CAAC,CAAC;IAEH,gBAAgB;IAChB,mBAAmB;IACnB,MAAM,cAAc,GAAG,CAAC,MAA2B,EAAE,EAAE,WAAC,OAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,mCAAI,EAAE,CAAA,EAAA,CAAC;IAE3E,MAAM,oBAAoB,GAAG,CAC3B,MAA2B,EAC3B,KAA0B,EAC1B,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC;IAE5B,MAAM,QAAQ,GAAuD,CACnE,CAAC,EACD,KAAK,EACL,EAAE;QACF,KAAK,CAAC,QAAQ,CAAC,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC;IAEF,MAAM,gBAAgB,GAAG,GAAG,EAAE,eAC5B,OAAA,MAAA,MAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAkB,mCAAI,mBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,UAAU,mCAAI,IAAI,CAAA,EAAA,CAAC;IAExE,QAAQ;IACR,MAAM,aAAa,GAAG,GAAG,EAAE;;QAAC,OAAA,2EACvB,KAAK,KACR,KAAK,EAAE,MAAA,KAAK,CAAC,KAAK,mCAAI,IAAI,EAC1B,QAAQ,EAAE,QAAQ,EAClB,oBAAoB;YACpB,cAAc,EACd,KAAK,EAAE,KAAK,EACZ,OAAO,KACJ,qBAAqB,GACrB,YAAY,GACZ,QAAQ,EACX,CAAA;KAAA,CAAC;IAEH,MAAM,sBAAsB,GAAG,GAAG,EAAE,CAAC,iCAChC,mBAAmB,KACtB,UAAU,EAAE,gBAAgB,EAAE,IAC9B,CAAC;IAEH,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,sBAAsB,EAAE,CAAC;AACzD,CAAC,CAAC;AAEF,eAAe,eAAe,CAAC\"}","dts":{"name":"undefined/placeholder/src/modules/form/src/components/fields/autoComplete/useAutoComplete.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\n/// <reference types=\"react\" />\nimport { AutoCompleteOptions, AutoCompleteProps } from './autoComplete.types';\ndeclare const useAutoComplete: (props: AutoCompleteProps<AutoCompleteOptions>) => {\n    getFieldProps: () => any;\n    show: boolean;\n    getInnerTextFieldProps: () => {\n        helperText: string;\n    } | {\n        helperText: string;\n        onChange?: import(\"react\").ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined;\n        variant?: \"filled\" | undefined;\n        InputProps?: Partial<import(\"@mui/material\").FilledInputProps> | undefined;\n        autoComplete?: string | undefined;\n        autoFocus?: boolean | undefined;\n        children?: import(\"react\").ReactNode;\n        classes?: Partial<import(\"@mui/material\").TextFieldClasses> | undefined;\n        color?: import(\"@mui/types\").OverridableStringUnion<\"error\" | \"primary\" | \"secondary\" | \"info\" | \"success\" | \"warning\", import(\"@mui/material\").TextFieldPropsColorOverrides> | undefined;\n        defaultValue?: unknown;\n        disabled?: boolean | undefined;\n        error?: boolean | undefined;\n        FormHelperTextProps?: Partial<import(\"@mui/material\").FormHelperTextProps> | undefined;\n        fullWidth?: boolean | undefined;\n        id?: string | undefined;\n        InputLabelProps?: Partial<import(\"@mui/material\").InputLabelProps> | undefined;\n        inputProps?: import(\"@mui/material\").InputBaseComponentProps | undefined;\n        inputRef?: import(\"react\").Ref<any> | undefined;\n        label?: import(\"react\").ReactNode;\n        multiline?: boolean | undefined;\n        name?: string | undefined;\n        onBlur?: import(\"react\").FocusEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined;\n        onFocus?: import(\"react\").FocusEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined;\n        placeholder?: string | undefined;\n        required?: boolean | undefined;\n        rows?: string | number | undefined;\n        maxRows?: string | number | undefined;\n        minRows?: string | number | undefined;\n        select?: boolean | undefined;\n        SelectProps?: Partial<import(\"@mui/material\").SelectProps> | undefined;\n        size?: import(\"@mui/types\").OverridableStringUnion<\"small\" | \"medium\", import(\"@mui/material\").TextFieldPropsSizeOverrides> | undefined;\n        sx?: import(\"@mui/system\").SxProps<import(\"@mui/material\").Theme> | undefined;\n        type?: import(\"react\").HTMLInputTypeAttribute | undefined;\n        value?: unknown;\n        defaultChecked?: boolean | undefined;\n        suppressContentEditableWarning?: boolean | undefined;\n        suppressHydrationWarning?: boolean | undefined;\n        accessKey?: string | undefined;\n        className?: string | undefined;\n        contentEditable?: (boolean | \"true\" | \"false\") | \"inherit\" | undefined;\n        contextMenu?: string | undefined;\n        dir?: string | undefined;\n        draggable?: (boolean | \"true\" | \"false\") | undefined;\n        hidden?: boolean | undefined;\n        lang?: string | undefined;\n        nonce?: string | undefined;\n        slot?: string | undefined;\n        spellCheck?: (boolean | \"true\" | \"false\") | undefined;\n        style?: import(\"react\").CSSProperties | undefined;\n        tabIndex?: number | undefined;\n        title?: string | undefined;\n        translate?: \"yes\" | \"no\" | undefined;\n        radioGroup?: string | undefined;\n        role?: import(\"react\").AriaRole | undefined;\n        about?: string | undefined;\n        content?: string | undefined;\n        datatype?: string | undefined;\n        inlist?: any;\n        prefix?: string | undefined;\n        property?: string | undefined;\n        rel?: string | undefined;\n        resource?: string | undefined;\n        rev?: string | undefined;\n        typeof?: string | undefined;\n        vocab?: string | undefined;\n        autoCapitalize?: string | undefined;\n        autoCorrect?: string | undefined;\n        autoSave?: string | undefined;\n        itemProp?: string | undefined;\n        itemScope?: boolean | undefined;\n        itemType?: string | undefined;\n        itemID?: string | undefined;\n        itemRef?: string | undefined;\n        results?: number | undefined;\n        security?: string | undefined;\n        unselectable?: \"on\" | \"off\" | undefined;\n        inputMode?: \"search\" | \"text\" | \"url\" | \"none\" | \"tel\" | \"email\" | \"numeric\" | \"decimal\" | undefined;\n        is?: string | undefined;\n        \"aria-activedescendant\"?: string | undefined;\n        \"aria-atomic\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-autocomplete\"?: \"list\" | \"none\" | \"inline\" | \"both\" | undefined;\n        \"aria-braillelabel\"?: string | undefined;\n        \"aria-brailleroledescription\"?: string | undefined;\n        \"aria-busy\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-checked\"?: boolean | \"true\" | \"false\" | \"mixed\" | undefined;\n        \"aria-colcount\"?: number | undefined;\n        \"aria-colindex\"?: number | undefined;\n        \"aria-colindextext\"?: string | undefined;\n        \"aria-colspan\"?: number | undefined;\n        \"aria-controls\"?: string | undefined;\n        \"aria-current\"?: boolean | \"time\" | \"page\" | \"true\" | \"false\" | \"step\" | \"location\" | \"date\" | undefined;\n        \"aria-describedby\"?: string | undefined;\n        \"aria-description\"?: string | undefined;\n        \"aria-details\"?: string | undefined;\n        \"aria-disabled\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-dropeffect\"?: \"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined;\n        \"aria-errormessage\"?: string | undefined;\n        \"aria-expanded\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-flowto\"?: string | undefined;\n        \"aria-grabbed\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-haspopup\"?: boolean | \"dialog\" | \"menu\" | \"grid\" | \"true\" | \"false\" | \"listbox\" | \"tree\" | undefined;\n        \"aria-hidden\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-invalid\"?: boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined;\n        \"aria-keyshortcuts\"?: string | undefined;\n        \"aria-label\"?: string | undefined;\n        \"aria-labelledby\"?: string | undefined;\n        \"aria-level\"?: number | undefined;\n        \"aria-live\"?: \"off\" | \"assertive\" | \"polite\" | undefined;\n        \"aria-modal\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-multiline\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-multiselectable\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-orientation\"?: \"horizontal\" | \"vertical\" | undefined;\n        \"aria-owns\"?: string | undefined;\n        \"aria-placeholder\"?: string | undefined;\n        \"aria-posinset\"?: number | undefined;\n        \"aria-pressed\"?: boolean | \"true\" | \"false\" | \"mixed\" | undefined;\n        \"aria-readonly\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-relevant\"?: \"text\" | \"all\" | \"additions\" | \"additions removals\" | \"additions text\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined;\n        \"aria-required\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-roledescription\"?: string | undefined;\n        \"aria-rowcount\"?: number | undefined;\n        \"aria-rowindex\"?: number | undefined;\n        \"aria-rowindextext\"?: string | undefined;\n        \"aria-rowspan\"?: number | undefined;\n        \"aria-selected\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-setsize\"?: number | undefined;\n        \"aria-sort\"?: \"none\" | \"ascending\" | \"descending\" | \"other\" | undefined;\n        \"aria-valuemax\"?: number | undefined;\n        \"aria-valuemin\"?: number | undefined;\n        \"aria-valuenow\"?: number | undefined;\n        \"aria-valuetext\"?: string | undefined;\n        dangerouslySetInnerHTML?: {\n            __html: string | TrustedHTML;\n        } | undefined;\n        onCopy?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onCopyCapture?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onCut?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onCutCapture?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onPaste?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onPasteCapture?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onCompositionEnd?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionEndCapture?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionStart?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionStartCapture?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionUpdate?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionUpdateCapture?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onFocusCapture?: import(\"react\").FocusEventHandler<HTMLDivElement> | undefined;\n        onBlurCapture?: import(\"react\").FocusEventHandler<HTMLDivElement> | undefined;\n        onChangeCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onBeforeInput?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onBeforeInputCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onInput?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onInputCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onReset?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onResetCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onSubmit?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onSubmitCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onInvalid?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onInvalidCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onLoad?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onError?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onErrorCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onKeyDown?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyDownCapture?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyPress?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyPressCapture?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyUp?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyUpCapture?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onAbort?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onAbortCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onCanPlay?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onCanPlayCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onCanPlayThrough?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onCanPlayThroughCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onDurationChange?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onDurationChangeCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEmptied?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEmptiedCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEncrypted?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEncryptedCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEnded?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEndedCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadedData?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadedDataCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadedMetadata?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadedMetadataCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadStart?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadStartCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPause?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPauseCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPlay?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPlayCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPlaying?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPlayingCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onProgress?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onProgressCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onRateChange?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onRateChangeCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onResize?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onResizeCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSeeked?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSeekedCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSeeking?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSeekingCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onStalled?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onStalledCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSuspend?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSuspendCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onTimeUpdate?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onTimeUpdateCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onVolumeChange?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onVolumeChangeCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onWaiting?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onWaitingCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onAuxClick?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onAuxClickCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onClick?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onClickCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onContextMenu?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onContextMenuCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onDoubleClick?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onDoubleClickCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onDrag?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragEnd?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragEndCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragEnter?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragEnterCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragExit?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragExitCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragLeave?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragLeaveCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragOver?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragOverCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragStart?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragStartCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDrop?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDropCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onMouseDown?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseDownCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseEnter?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseLeave?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseMove?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseMoveCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseOut?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseOutCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseOver?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseOverCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseUp?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseUpCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onSelect?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSelectCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onTouchCancel?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchCancelCapture?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchEnd?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchEndCapture?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchMove?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchMoveCapture?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchStart?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchStartCapture?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onPointerDown?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerDownCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerMove?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerMoveCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerUp?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerUpCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerCancel?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerCancelCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerEnter?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerEnterCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerLeave?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerLeaveCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerOver?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerOverCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerOut?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerOutCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onGotPointerCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onGotPointerCaptureCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onLostPointerCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onLostPointerCaptureCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onScroll?: import(\"react\").UIEventHandler<HTMLDivElement> | undefined;\n        onScrollCapture?: import(\"react\").UIEventHandler<HTMLDivElement> | undefined;\n        onWheel?: import(\"react\").WheelEventHandler<HTMLDivElement> | undefined;\n        onWheelCapture?: import(\"react\").WheelEventHandler<HTMLDivElement> | undefined;\n        onAnimationStart?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationStartCapture?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationEnd?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationEndCapture?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationIteration?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationIterationCapture?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onTransitionEnd?: import(\"react\").TransitionEventHandler<HTMLDivElement> | undefined;\n        onTransitionEndCapture?: import(\"react\").TransitionEventHandler<HTMLDivElement> | undefined;\n        ref?: ((instance: HTMLDivElement | null) => void) | import(\"react\").RefObject<HTMLDivElement> | null | undefined;\n        focused?: boolean | undefined;\n        hiddenLabel?: boolean | undefined;\n        margin?: \"none\" | \"dense\" | \"normal\" | undefined;\n        key?: import(\"react\").Key | null | undefined;\n        component?: import(\"react\").ElementType<any> | undefined;\n    } | {\n        helperText: string;\n        onChange?: import(\"react\").ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined;\n        variant?: \"outlined\" | undefined;\n        InputProps?: Partial<import(\"@mui/material\").OutlinedInputProps> | undefined;\n        autoComplete?: string | undefined;\n        autoFocus?: boolean | undefined;\n        children?: import(\"react\").ReactNode;\n        classes?: Partial<import(\"@mui/material\").TextFieldClasses> | undefined;\n        color?: import(\"@mui/types\").OverridableStringUnion<\"error\" | \"primary\" | \"secondary\" | \"info\" | \"success\" | \"warning\", import(\"@mui/material\").TextFieldPropsColorOverrides> | undefined;\n        defaultValue?: unknown;\n        disabled?: boolean | undefined;\n        error?: boolean | undefined;\n        FormHelperTextProps?: Partial<import(\"@mui/material\").FormHelperTextProps> | undefined;\n        fullWidth?: boolean | undefined;\n        id?: string | undefined;\n        InputLabelProps?: Partial<import(\"@mui/material\").InputLabelProps> | undefined;\n        inputProps?: import(\"@mui/material\").InputBaseComponentProps | undefined;\n        inputRef?: import(\"react\").Ref<any> | undefined;\n        label?: import(\"react\").ReactNode;\n        multiline?: boolean | undefined;\n        name?: string | undefined;\n        onBlur?: import(\"react\").FocusEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined;\n        onFocus?: import(\"react\").FocusEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined;\n        placeholder?: string | undefined;\n        required?: boolean | undefined;\n        rows?: string | number | undefined;\n        maxRows?: string | number | undefined;\n        minRows?: string | number | undefined;\n        select?: boolean | undefined;\n        SelectProps?: Partial<import(\"@mui/material\").SelectProps> | undefined;\n        size?: import(\"@mui/types\").OverridableStringUnion<\"small\" | \"medium\", import(\"@mui/material\").TextFieldPropsSizeOverrides> | undefined;\n        sx?: import(\"@mui/system\").SxProps<import(\"@mui/material\").Theme> | undefined;\n        type?: import(\"react\").HTMLInputTypeAttribute | undefined;\n        value?: unknown;\n        defaultChecked?: boolean | undefined;\n        suppressContentEditableWarning?: boolean | undefined;\n        suppressHydrationWarning?: boolean | undefined;\n        accessKey?: string | undefined;\n        className?: string | undefined;\n        contentEditable?: (boolean | \"true\" | \"false\") | \"inherit\" | undefined;\n        contextMenu?: string | undefined;\n        dir?: string | undefined;\n        draggable?: (boolean | \"true\" | \"false\") | undefined;\n        hidden?: boolean | undefined;\n        lang?: string | undefined;\n        nonce?: string | undefined;\n        slot?: string | undefined;\n        spellCheck?: (boolean | \"true\" | \"false\") | undefined;\n        style?: import(\"react\").CSSProperties | undefined;\n        tabIndex?: number | undefined;\n        title?: string | undefined;\n        translate?: \"yes\" | \"no\" | undefined;\n        radioGroup?: string | undefined;\n        role?: import(\"react\").AriaRole | undefined;\n        about?: string | undefined;\n        content?: string | undefined;\n        datatype?: string | undefined;\n        inlist?: any;\n        prefix?: string | undefined;\n        property?: string | undefined;\n        rel?: string | undefined;\n        resource?: string | undefined;\n        rev?: string | undefined;\n        typeof?: string | undefined;\n        vocab?: string | undefined;\n        autoCapitalize?: string | undefined;\n        autoCorrect?: string | undefined;\n        autoSave?: string | undefined;\n        itemProp?: string | undefined;\n        itemScope?: boolean | undefined;\n        itemType?: string | undefined;\n        itemID?: string | undefined;\n        itemRef?: string | undefined;\n        results?: number | undefined;\n        security?: string | undefined;\n        unselectable?: \"on\" | \"off\" | undefined;\n        inputMode?: \"search\" | \"text\" | \"url\" | \"none\" | \"tel\" | \"email\" | \"numeric\" | \"decimal\" | undefined;\n        is?: string | undefined;\n        \"aria-activedescendant\"?: string | undefined;\n        \"aria-atomic\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-autocomplete\"?: \"list\" | \"none\" | \"inline\" | \"both\" | undefined;\n        \"aria-braillelabel\"?: string | undefined;\n        \"aria-brailleroledescription\"?: string | undefined;\n        \"aria-busy\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-checked\"?: boolean | \"true\" | \"false\" | \"mixed\" | undefined;\n        \"aria-colcount\"?: number | undefined;\n        \"aria-colindex\"?: number | undefined;\n        \"aria-colindextext\"?: string | undefined;\n        \"aria-colspan\"?: number | undefined;\n        \"aria-controls\"?: string | undefined;\n        \"aria-current\"?: boolean | \"time\" | \"page\" | \"true\" | \"false\" | \"step\" | \"location\" | \"date\" | undefined;\n        \"aria-describedby\"?: string | undefined;\n        \"aria-description\"?: string | undefined;\n        \"aria-details\"?: string | undefined;\n        \"aria-disabled\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-dropeffect\"?: \"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined;\n        \"aria-errormessage\"?: string | undefined;\n        \"aria-expanded\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-flowto\"?: string | undefined;\n        \"aria-grabbed\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-haspopup\"?: boolean | \"dialog\" | \"menu\" | \"grid\" | \"true\" | \"false\" | \"listbox\" | \"tree\" | undefined;\n        \"aria-hidden\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-invalid\"?: boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined;\n        \"aria-keyshortcuts\"?: string | undefined;\n        \"aria-label\"?: string | undefined;\n        \"aria-labelledby\"?: string | undefined;\n        \"aria-level\"?: number | undefined;\n        \"aria-live\"?: \"off\" | \"assertive\" | \"polite\" | undefined;\n        \"aria-modal\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-multiline\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-multiselectable\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-orientation\"?: \"horizontal\" | \"vertical\" | undefined;\n        \"aria-owns\"?: string | undefined;\n        \"aria-placeholder\"?: string | undefined;\n        \"aria-posinset\"?: number | undefined;\n        \"aria-pressed\"?: boolean | \"true\" | \"false\" | \"mixed\" | undefined;\n        \"aria-readonly\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-relevant\"?: \"text\" | \"all\" | \"additions\" | \"additions removals\" | \"additions text\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined;\n        \"aria-required\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-roledescription\"?: string | undefined;\n        \"aria-rowcount\"?: number | undefined;\n        \"aria-rowindex\"?: number | undefined;\n        \"aria-rowindextext\"?: string | undefined;\n        \"aria-rowspan\"?: number | undefined;\n        \"aria-selected\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-setsize\"?: number | undefined;\n        \"aria-sort\"?: \"none\" | \"ascending\" | \"descending\" | \"other\" | undefined;\n        \"aria-valuemax\"?: number | undefined;\n        \"aria-valuemin\"?: number | undefined;\n        \"aria-valuenow\"?: number | undefined;\n        \"aria-valuetext\"?: string | undefined;\n        dangerouslySetInnerHTML?: {\n            __html: string | TrustedHTML;\n        } | undefined;\n        onCopy?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onCopyCapture?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onCut?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onCutCapture?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onPaste?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onPasteCapture?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onCompositionEnd?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionEndCapture?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionStart?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionStartCapture?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionUpdate?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionUpdateCapture?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onFocusCapture?: import(\"react\").FocusEventHandler<HTMLDivElement> | undefined;\n        onBlurCapture?: import(\"react\").FocusEventHandler<HTMLDivElement> | undefined;\n        onChangeCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onBeforeInput?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onBeforeInputCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onInput?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onInputCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onReset?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onResetCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onSubmit?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onSubmitCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onInvalid?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onInvalidCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onLoad?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onError?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onErrorCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onKeyDown?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyDownCapture?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyPress?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyPressCapture?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyUp?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyUpCapture?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onAbort?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onAbortCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onCanPlay?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onCanPlayCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onCanPlayThrough?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onCanPlayThroughCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onDurationChange?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onDurationChangeCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEmptied?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEmptiedCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEncrypted?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEncryptedCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEnded?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEndedCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadedData?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadedDataCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadedMetadata?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadedMetadataCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadStart?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadStartCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPause?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPauseCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPlay?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPlayCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPlaying?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPlayingCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onProgress?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onProgressCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onRateChange?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onRateChangeCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onResize?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onResizeCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSeeked?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSeekedCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSeeking?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSeekingCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onStalled?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onStalledCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSuspend?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSuspendCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onTimeUpdate?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onTimeUpdateCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onVolumeChange?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onVolumeChangeCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onWaiting?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onWaitingCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onAuxClick?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onAuxClickCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onClick?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onClickCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onContextMenu?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onContextMenuCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onDoubleClick?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onDoubleClickCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onDrag?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragEnd?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragEndCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragEnter?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragEnterCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragExit?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragExitCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragLeave?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragLeaveCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragOver?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragOverCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragStart?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragStartCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDrop?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDropCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onMouseDown?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseDownCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseEnter?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseLeave?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseMove?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseMoveCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseOut?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseOutCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseOver?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseOverCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseUp?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseUpCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onSelect?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSelectCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onTouchCancel?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchCancelCapture?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchEnd?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchEndCapture?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchMove?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchMoveCapture?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchStart?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchStartCapture?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onPointerDown?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerDownCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerMove?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerMoveCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerUp?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerUpCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerCancel?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerCancelCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerEnter?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerEnterCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerLeave?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerLeaveCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerOver?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerOverCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerOut?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerOutCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onGotPointerCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onGotPointerCaptureCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onLostPointerCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onLostPointerCaptureCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onScroll?: import(\"react\").UIEventHandler<HTMLDivElement> | undefined;\n        onScrollCapture?: import(\"react\").UIEventHandler<HTMLDivElement> | undefined;\n        onWheel?: import(\"react\").WheelEventHandler<HTMLDivElement> | undefined;\n        onWheelCapture?: import(\"react\").WheelEventHandler<HTMLDivElement> | undefined;\n        onAnimationStart?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationStartCapture?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationEnd?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationEndCapture?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationIteration?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationIterationCapture?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onTransitionEnd?: import(\"react\").TransitionEventHandler<HTMLDivElement> | undefined;\n        onTransitionEndCapture?: import(\"react\").TransitionEventHandler<HTMLDivElement> | undefined;\n        ref?: ((instance: HTMLDivElement | null) => void) | import(\"react\").RefObject<HTMLDivElement> | null | undefined;\n        focused?: boolean | undefined;\n        hiddenLabel?: boolean | undefined;\n        margin?: \"none\" | \"dense\" | \"normal\" | undefined;\n        key?: import(\"react\").Key | null | undefined;\n        component?: import(\"react\").ElementType<any> | undefined;\n    } | {\n        helperText: string;\n        onChange?: import(\"react\").ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined;\n        variant?: \"standard\" | undefined;\n        InputProps?: Partial<import(\"@mui/material\").InputProps> | undefined;\n        autoComplete?: string | undefined;\n        autoFocus?: boolean | undefined;\n        children?: import(\"react\").ReactNode;\n        classes?: Partial<import(\"@mui/material\").TextFieldClasses> | undefined;\n        color?: import(\"@mui/types\").OverridableStringUnion<\"error\" | \"primary\" | \"secondary\" | \"info\" | \"success\" | \"warning\", import(\"@mui/material\").TextFieldPropsColorOverrides> | undefined;\n        defaultValue?: unknown;\n        disabled?: boolean | undefined;\n        error?: boolean | undefined;\n        FormHelperTextProps?: Partial<import(\"@mui/material\").FormHelperTextProps> | undefined;\n        fullWidth?: boolean | undefined;\n        id?: string | undefined;\n        InputLabelProps?: Partial<import(\"@mui/material\").InputLabelProps> | undefined;\n        inputProps?: import(\"@mui/material\").InputBaseComponentProps | undefined;\n        inputRef?: import(\"react\").Ref<any> | undefined;\n        label?: import(\"react\").ReactNode;\n        multiline?: boolean | undefined;\n        name?: string | undefined;\n        onBlur?: import(\"react\").FocusEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined;\n        onFocus?: import(\"react\").FocusEventHandler<HTMLInputElement | HTMLTextAreaElement> | undefined;\n        placeholder?: string | undefined;\n        required?: boolean | undefined;\n        rows?: string | number | undefined;\n        maxRows?: string | number | undefined;\n        minRows?: string | number | undefined;\n        select?: boolean | undefined;\n        SelectProps?: Partial<import(\"@mui/material\").SelectProps> | undefined;\n        size?: import(\"@mui/types\").OverridableStringUnion<\"small\" | \"medium\", import(\"@mui/material\").TextFieldPropsSizeOverrides> | undefined;\n        sx?: import(\"@mui/system\").SxProps<import(\"@mui/material\").Theme> | undefined;\n        type?: import(\"react\").HTMLInputTypeAttribute | undefined;\n        value?: unknown;\n        defaultChecked?: boolean | undefined;\n        suppressContentEditableWarning?: boolean | undefined;\n        suppressHydrationWarning?: boolean | undefined;\n        accessKey?: string | undefined;\n        className?: string | undefined;\n        contentEditable?: (boolean | \"true\" | \"false\") | \"inherit\" | undefined;\n        contextMenu?: string | undefined;\n        dir?: string | undefined;\n        draggable?: (boolean | \"true\" | \"false\") | undefined;\n        hidden?: boolean | undefined;\n        lang?: string | undefined;\n        nonce?: string | undefined;\n        slot?: string | undefined;\n        spellCheck?: (boolean | \"true\" | \"false\") | undefined;\n        style?: import(\"react\").CSSProperties | undefined;\n        tabIndex?: number | undefined;\n        title?: string | undefined;\n        translate?: \"yes\" | \"no\" | undefined;\n        radioGroup?: string | undefined;\n        role?: import(\"react\").AriaRole | undefined;\n        about?: string | undefined;\n        content?: string | undefined;\n        datatype?: string | undefined;\n        inlist?: any;\n        prefix?: string | undefined;\n        property?: string | undefined;\n        rel?: string | undefined;\n        resource?: string | undefined;\n        rev?: string | undefined;\n        typeof?: string | undefined;\n        vocab?: string | undefined;\n        autoCapitalize?: string | undefined;\n        autoCorrect?: string | undefined;\n        autoSave?: string | undefined;\n        itemProp?: string | undefined;\n        itemScope?: boolean | undefined;\n        itemType?: string | undefined;\n        itemID?: string | undefined;\n        itemRef?: string | undefined;\n        results?: number | undefined;\n        security?: string | undefined;\n        unselectable?: \"on\" | \"off\" | undefined;\n        inputMode?: \"search\" | \"text\" | \"url\" | \"none\" | \"tel\" | \"email\" | \"numeric\" | \"decimal\" | undefined;\n        is?: string | undefined;\n        \"aria-activedescendant\"?: string | undefined;\n        \"aria-atomic\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-autocomplete\"?: \"list\" | \"none\" | \"inline\" | \"both\" | undefined;\n        \"aria-braillelabel\"?: string | undefined;\n        \"aria-brailleroledescription\"?: string | undefined;\n        \"aria-busy\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-checked\"?: boolean | \"true\" | \"false\" | \"mixed\" | undefined;\n        \"aria-colcount\"?: number | undefined;\n        \"aria-colindex\"?: number | undefined;\n        \"aria-colindextext\"?: string | undefined;\n        \"aria-colspan\"?: number | undefined;\n        \"aria-controls\"?: string | undefined;\n        \"aria-current\"?: boolean | \"time\" | \"page\" | \"true\" | \"false\" | \"step\" | \"location\" | \"date\" | undefined;\n        \"aria-describedby\"?: string | undefined;\n        \"aria-description\"?: string | undefined;\n        \"aria-details\"?: string | undefined;\n        \"aria-disabled\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-dropeffect\"?: \"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\" | undefined;\n        \"aria-errormessage\"?: string | undefined;\n        \"aria-expanded\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-flowto\"?: string | undefined;\n        \"aria-grabbed\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-haspopup\"?: boolean | \"dialog\" | \"menu\" | \"grid\" | \"true\" | \"false\" | \"listbox\" | \"tree\" | undefined;\n        \"aria-hidden\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-invalid\"?: boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\" | undefined;\n        \"aria-keyshortcuts\"?: string | undefined;\n        \"aria-label\"?: string | undefined;\n        \"aria-labelledby\"?: string | undefined;\n        \"aria-level\"?: number | undefined;\n        \"aria-live\"?: \"off\" | \"assertive\" | \"polite\" | undefined;\n        \"aria-modal\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-multiline\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-multiselectable\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-orientation\"?: \"horizontal\" | \"vertical\" | undefined;\n        \"aria-owns\"?: string | undefined;\n        \"aria-placeholder\"?: string | undefined;\n        \"aria-posinset\"?: number | undefined;\n        \"aria-pressed\"?: boolean | \"true\" | \"false\" | \"mixed\" | undefined;\n        \"aria-readonly\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-relevant\"?: \"text\" | \"all\" | \"additions\" | \"additions removals\" | \"additions text\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\" | undefined;\n        \"aria-required\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-roledescription\"?: string | undefined;\n        \"aria-rowcount\"?: number | undefined;\n        \"aria-rowindex\"?: number | undefined;\n        \"aria-rowindextext\"?: string | undefined;\n        \"aria-rowspan\"?: number | undefined;\n        \"aria-selected\"?: (boolean | \"true\" | \"false\") | undefined;\n        \"aria-setsize\"?: number | undefined;\n        \"aria-sort\"?: \"none\" | \"ascending\" | \"descending\" | \"other\" | undefined;\n        \"aria-valuemax\"?: number | undefined;\n        \"aria-valuemin\"?: number | undefined;\n        \"aria-valuenow\"?: number | undefined;\n        \"aria-valuetext\"?: string | undefined;\n        dangerouslySetInnerHTML?: {\n            __html: string | TrustedHTML;\n        } | undefined;\n        onCopy?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onCopyCapture?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onCut?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onCutCapture?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onPaste?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onPasteCapture?: import(\"react\").ClipboardEventHandler<HTMLDivElement> | undefined;\n        onCompositionEnd?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionEndCapture?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionStart?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionStartCapture?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionUpdate?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onCompositionUpdateCapture?: import(\"react\").CompositionEventHandler<HTMLDivElement> | undefined;\n        onFocusCapture?: import(\"react\").FocusEventHandler<HTMLDivElement> | undefined;\n        onBlurCapture?: import(\"react\").FocusEventHandler<HTMLDivElement> | undefined;\n        onChangeCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onBeforeInput?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onBeforeInputCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onInput?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onInputCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onReset?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onResetCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onSubmit?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onSubmitCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onInvalid?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onInvalidCapture?: import(\"react\").FormEventHandler<HTMLDivElement> | undefined;\n        onLoad?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onError?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onErrorCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onKeyDown?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyDownCapture?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyPress?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyPressCapture?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyUp?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onKeyUpCapture?: import(\"react\").KeyboardEventHandler<HTMLDivElement> | undefined;\n        onAbort?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onAbortCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onCanPlay?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onCanPlayCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onCanPlayThrough?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onCanPlayThroughCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onDurationChange?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onDurationChangeCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEmptied?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEmptiedCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEncrypted?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEncryptedCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEnded?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onEndedCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadedData?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadedDataCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadedMetadata?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadedMetadataCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadStart?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onLoadStartCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPause?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPauseCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPlay?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPlayCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPlaying?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onPlayingCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onProgress?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onProgressCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onRateChange?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onRateChangeCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onResize?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onResizeCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSeeked?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSeekedCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSeeking?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSeekingCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onStalled?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onStalledCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSuspend?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSuspendCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onTimeUpdate?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onTimeUpdateCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onVolumeChange?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onVolumeChangeCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onWaiting?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onWaitingCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onAuxClick?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onAuxClickCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onClick?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onClickCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onContextMenu?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onContextMenuCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onDoubleClick?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onDoubleClickCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onDrag?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragEnd?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragEndCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragEnter?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragEnterCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragExit?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragExitCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragLeave?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragLeaveCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragOver?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragOverCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragStart?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDragStartCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDrop?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onDropCapture?: import(\"react\").DragEventHandler<HTMLDivElement> | undefined;\n        onMouseDown?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseDownCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseEnter?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseLeave?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseMove?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseMoveCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseOut?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseOutCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseOver?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseOverCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseUp?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onMouseUpCapture?: import(\"react\").MouseEventHandler<HTMLDivElement> | undefined;\n        onSelect?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onSelectCapture?: import(\"react\").ReactEventHandler<HTMLDivElement> | undefined;\n        onTouchCancel?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchCancelCapture?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchEnd?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchEndCapture?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchMove?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchMoveCapture?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchStart?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onTouchStartCapture?: import(\"react\").TouchEventHandler<HTMLDivElement> | undefined;\n        onPointerDown?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerDownCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerMove?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerMoveCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerUp?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerUpCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerCancel?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerCancelCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerEnter?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerEnterCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerLeave?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerLeaveCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerOver?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerOverCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerOut?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onPointerOutCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onGotPointerCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onGotPointerCaptureCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onLostPointerCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onLostPointerCaptureCapture?: import(\"react\").PointerEventHandler<HTMLDivElement> | undefined;\n        onScroll?: import(\"react\").UIEventHandler<HTMLDivElement> | undefined;\n        onScrollCapture?: import(\"react\").UIEventHandler<HTMLDivElement> | undefined;\n        onWheel?: import(\"react\").WheelEventHandler<HTMLDivElement> | undefined;\n        onWheelCapture?: import(\"react\").WheelEventHandler<HTMLDivElement> | undefined;\n        onAnimationStart?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationStartCapture?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationEnd?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationEndCapture?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationIteration?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onAnimationIterationCapture?: import(\"react\").AnimationEventHandler<HTMLDivElement> | undefined;\n        onTransitionEnd?: import(\"react\").TransitionEventHandler<HTMLDivElement> | undefined;\n        onTransitionEndCapture?: import(\"react\").TransitionEventHandler<HTMLDivElement> | undefined;\n        ref?: ((instance: HTMLDivElement | null) => void) | import(\"react\").RefObject<HTMLDivElement> | null | undefined;\n        focused?: boolean | undefined;\n        hiddenLabel?: boolean | undefined;\n        margin?: \"none\" | \"dense\" | \"normal\" | undefined;\n        key?: import(\"react\").Key | null | undefined;\n        component?: import(\"react\").ElementType<any> | undefined;\n    };\n};\nexport default useAutoComplete;\n"}}
